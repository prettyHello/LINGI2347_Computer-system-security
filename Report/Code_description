  Author: -   Anicet SIEWE KOUETA
		    -   Regine MAKONGA





=====================
running.
=====================
	
  =====================
	Fuzzer1
	=====================
•   the program reads the input file,
•   Calculates the byte number of the image
•   Create a table with the size of the byte number, and store each byte of the image in the table.

        ** NOTE **: These are the non-decimal decimal values ​​of the image's bytes that are stored 
                    in the array. (convert the Hexadecimal value of the image to an unsigned decimal,
                     before storing it in the array.).

        --Example--: the AB byte will be 127
                 CD --> 205
                 64 --> 100
                  .  .  .
                  .  .  .
                  .  .  .
                 00 --> 0

•   Then, We define a byte position from which we must make the change of value.
    example: in our case, we start to change the values ​​from the width Debut_octet = 10
    (so the value of the bytes of the version and the author will not change in our tests).
•   One makes a loop which takes a byte randomly (thus a box of the table) understood between
     Debut_octect, until the percentage enters in argument. changes the value of this byte and 
     sets a random non-random decimal value.
    We repeat the same iteration for the number of values ​​to modify.
•   Once the new value is assigned to our image array, the create_file_for_attack() function 
    creates from the values ​​of our array an inputFile_attack.img file.
•   our program then executes the subroutine  :
    << #./converter inputFile_attack.img ouputFile.img >>
    and stores the result of the command in the file  "/out/exectute.txt"
    At the end of the program execution, 'exectute.txt' contains only the result of the last iteration.
•   We then compare the contents of this file. if the program has to crash, we will have at the inside 
    of this file the phase "*** The program has crashed.".
•   For each iteration that causes the converter program to crash, first save the complete '.img' file 
    in the "/out/FileCrash/" directory. And in a file "/out/FileLog/LOG_File_CRACHE_OK.txt" the position 
    of the byte that has been modified and the value (in unsigned decimal) which has been assigned to it 
    as a couple (X, Y).

    ** NOTE **: Files in the 'FileLog/' directory contain only the modified byte addresses and their new values.

    --Example--: Byte AB occupies position  0
                      CD occupies position  1
                      64 is in position     2
                        .  .  .
                        .  .  .
                        .  .  .
                     00 is in position     293
	

    =====================
    Fuzzer2
    =====================

  • Knowing the structure of the image, one saves in a table preamble[] the value of the first 14 bytes of the 
    image: that is, ABCD, the version, the no of the author and the width.
  • These values will be copy in our tablefile[] array which will contain all the bytes needed to generate the 
    image files
  • Then we continue to fill our tablefile[] table with the sensible values of the height and the color table 
    in it.
  • Save in a file "out/FileLog/LOG_File_Fuzzer2.txt" the couple (X, Y) of the bytes modify with their value 
    in decimal unsigned
  • "out/FileCrash/Attack_Filegenerate_Nx.img": is the image file with blocking of the program generated by 
    myfuzzer2 where Nx corresponds to the generated file number.

